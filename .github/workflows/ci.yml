on:
  push:
    branches:
      - main
      - v*.x
  pull_request:
    branches:
      - main
      - v*.x
name: Continuous integration

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
        with:
          targets: ${{ matrix.target }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-dot-cargo-${{ steps.toolchain.outputs.cacheKey }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-dot-cargo-${{ steps.toolchain.outputs.cacheKey }}-
            ${{ runner.os }}-dot-cargo-
      - uses: actions/cache@v4
        with:
          path: |
            ./crates/jxl-oxide/tests/cache/
          key: jxl-oxide-fixtures-0-${{ hashFiles('crates/jxl-oxide/tests/*.rs') }}
          restore-keys: |
            jxl-oxide-fixtures-0-
      - name: Install cross
        uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cross
          git: https://github.com/cross-rs/cross
          rev: 7b79041c9278769eca57fae10c74741f5aa5c14b
      - name: Run tests
        run: cross test --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: images
          path: crates/jxl-oxide/tests/.artifact/

  clippy:
    name: Rustfmt and Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
        with:
          components: clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-dot-cargo-${{ steps.toolchain.outputs.cacheKey }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-dot-cargo-${{ steps.toolchain.outputs.cacheKey }}-
            ${{ runner.os }}-dot-cargo-
      - run: cargo fmt --all --check
      # these should install everything
      - run: sudo apt update && sudo apt install -y libavfilter-dev libavdevice-dev
      - run: |
          cargo clippy --all --no-default-features -- -D warnings
          cargo clippy --all -- -D warnings
          cargo clippy --all --all-features -- -D warnings
